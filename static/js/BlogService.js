//
// Autogenerated by Thrift Compiler (0.13.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
if (typeof Int64 === 'undefined' && typeof require === 'function') {
  var Int64 = require('node-int64');
}


//HELPER FUNCTIONS AND STRUCTURES

BlogService_GetBlogsByTIDAndUID_args = function(args) {
  this.i = null;
  if (args) {
    if (args.i !== undefined && args.i !== null) {
      this.i = new Int2req(args.i);
    }
  }
};
BlogService_GetBlogsByTIDAndUID_args.prototype = {};
BlogService_GetBlogsByTIDAndUID_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.i = new Int2req();
        this.i.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BlogService_GetBlogsByTIDAndUID_args.prototype.write = function(output) {
  output.writeStructBegin('BlogService_GetBlogsByTIDAndUID_args');
  if (this.i !== null && this.i !== undefined) {
    output.writeFieldBegin('i', Thrift.Type.STRUCT, 1);
    this.i.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BlogService_GetBlogsByTIDAndUID_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [Blog]);
    }
  }
};
BlogService_GetBlogsByTIDAndUID_result.prototype = {};
BlogService_GetBlogsByTIDAndUID_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp36 = input.readListBegin();
        var _size5 = _rtmp36.size || 0;
        for (var _i7 = 0; _i7 < _size5; ++_i7) {
          var elem8 = null;
          elem8 = new Blog();
          elem8.read(input);
          this.success.push(elem8);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BlogService_GetBlogsByTIDAndUID_result.prototype.write = function(output) {
  output.writeStructBegin('BlogService_GetBlogsByTIDAndUID_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter9 in this.success) {
      if (this.success.hasOwnProperty(iter9)) {
        iter9 = this.success[iter9];
        iter9.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BlogService_GetBlogsByUid_args = function(args) {
  this.i = null;
  if (args) {
    if (args.i !== undefined && args.i !== null) {
      this.i = new Intreq(args.i);
    }
  }
};
BlogService_GetBlogsByUid_args.prototype = {};
BlogService_GetBlogsByUid_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.i = new Intreq();
        this.i.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BlogService_GetBlogsByUid_args.prototype.write = function(output) {
  output.writeStructBegin('BlogService_GetBlogsByUid_args');
  if (this.i !== null && this.i !== undefined) {
    output.writeFieldBegin('i', Thrift.Type.STRUCT, 1);
    this.i.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BlogService_GetBlogsByUid_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [Blog]);
    }
  }
};
BlogService_GetBlogsByUid_result.prototype = {};
BlogService_GetBlogsByUid_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp311 = input.readListBegin();
        var _size10 = _rtmp311.size || 0;
        for (var _i12 = 0; _i12 < _size10; ++_i12) {
          var elem13 = null;
          elem13 = new Blog();
          elem13.read(input);
          this.success.push(elem13);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BlogService_GetBlogsByUid_result.prototype.write = function(output) {
  output.writeStructBegin('BlogService_GetBlogsByUid_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter14 in this.success) {
      if (this.success.hasOwnProperty(iter14)) {
        iter14 = this.success[iter14];
        iter14.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BlogService_GetBlogById_args = function(args) {
  this.i = null;
  if (args) {
    if (args.i !== undefined && args.i !== null) {
      this.i = new Intreq(args.i);
    }
  }
};
BlogService_GetBlogById_args.prototype = {};
BlogService_GetBlogById_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.i = new Intreq();
        this.i.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BlogService_GetBlogById_args.prototype.write = function(output) {
  output.writeStructBegin('BlogService_GetBlogById_args');
  if (this.i !== null && this.i !== undefined) {
    output.writeFieldBegin('i', Thrift.Type.STRUCT, 1);
    this.i.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BlogService_GetBlogById_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new Blog(args.success);
    }
  }
};
BlogService_GetBlogById_result.prototype = {};
BlogService_GetBlogById_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new Blog();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BlogService_GetBlogById_result.prototype.write = function(output) {
  output.writeStructBegin('BlogService_GetBlogById_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BlogServiceClient = function(input, output) {
  this.input = input;
  this.output = (!output) ? input : output;
  this.seqid = 0;
};
BlogServiceClient.prototype = {};

BlogServiceClient.prototype.GetBlogsByTIDAndUID = function(i, callback) {
  this.send_GetBlogsByTIDAndUID(i, callback); 
  if (!callback) {
    return this.recv_GetBlogsByTIDAndUID();
  }
};

BlogServiceClient.prototype.send_GetBlogsByTIDAndUID = function(i, callback) {
  var params = {
    i: i
  };
  var args = new BlogService_GetBlogsByTIDAndUID_args(params);
  try {
    this.output.writeMessageBegin('GetBlogsByTIDAndUID', Thrift.MessageType.CALL, this.seqid);
    args.write(this.output);
    this.output.writeMessageEnd();
    if (callback) {
      var self = this;
      this.output.getTransport().flush(true, function() {
        var result = null;
        try {
          result = self.recv_GetBlogsByTIDAndUID();
        } catch (e) {
          result = e;
        }
        callback(result);
      });
    } else {
      return this.output.getTransport().flush();
    }
  }
  catch (e) {
    if (typeof this.output.getTransport().reset === 'function') {
      this.output.getTransport().reset();
    }
    throw e;
  }
};

BlogServiceClient.prototype.recv_GetBlogsByTIDAndUID = function() {
  var ret = this.input.readMessageBegin();
  var mtype = ret.mtype;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BlogService_GetBlogsByTIDAndUID_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.success) {
    return result.success;
  }
  throw 'GetBlogsByTIDAndUID failed: unknown result';
};

BlogServiceClient.prototype.GetBlogsByUid = function(i, callback) {
  this.send_GetBlogsByUid(i, callback); 
  if (!callback) {
    return this.recv_GetBlogsByUid();
  }
};

BlogServiceClient.prototype.send_GetBlogsByUid = function(i, callback) {
  var params = {
    i: i
  };
  var args = new BlogService_GetBlogsByUid_args(params);
  try {
    this.output.writeMessageBegin('GetBlogsByUid', Thrift.MessageType.CALL, this.seqid);
    args.write(this.output);
    this.output.writeMessageEnd();
    if (callback) {
      var self = this;
      this.output.getTransport().flush(true, function() {
        var result = null;
        try {
          result = self.recv_GetBlogsByUid();
        } catch (e) {
          result = e;
        }
        callback(result);
      });
    } else {
      return this.output.getTransport().flush();
    }
  }
  catch (e) {
    if (typeof this.output.getTransport().reset === 'function') {
      this.output.getTransport().reset();
    }
    throw e;
  }
};

BlogServiceClient.prototype.recv_GetBlogsByUid = function() {
  var ret = this.input.readMessageBegin();
  var mtype = ret.mtype;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BlogService_GetBlogsByUid_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.success) {
    return result.success;
  }
  throw 'GetBlogsByUid failed: unknown result';
};

BlogServiceClient.prototype.GetBlogById = function(i, callback) {
  this.send_GetBlogById(i, callback); 
  if (!callback) {
    return this.recv_GetBlogById();
  }
};

BlogServiceClient.prototype.send_GetBlogById = function(i, callback) {
  var params = {
    i: i
  };
  var args = new BlogService_GetBlogById_args(params);
  try {
    this.output.writeMessageBegin('GetBlogById', Thrift.MessageType.CALL, this.seqid);
    args.write(this.output);
    this.output.writeMessageEnd();
    if (callback) {
      var self = this;
      this.output.getTransport().flush(true, function() {
        var result = null;
        try {
          result = self.recv_GetBlogById();
        } catch (e) {
          result = e;
        }
        callback(result);
      });
    } else {
      return this.output.getTransport().flush();
    }
  }
  catch (e) {
    if (typeof this.output.getTransport().reset === 'function') {
      this.output.getTransport().reset();
    }
    throw e;
  }
};

BlogServiceClient.prototype.recv_GetBlogById = function() {
  var ret = this.input.readMessageBegin();
  var mtype = ret.mtype;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BlogService_GetBlogById_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.success) {
    return result.success;
  }
  throw 'GetBlogById failed: unknown result';
};
